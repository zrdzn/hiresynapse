spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/postgres
    username: postgres
    password: postgres
  jpa:
    hibernate:
      ddl-auto: create
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false
  security:
    oauth2:
      client:
        registration:
          auth0:
            client-id: ${AUTH0_CLIENT_ID}
            client-secret: ${AUTH0_CLIENT_SECRET}
            scope: openid,profile,email
            redirect-uri: ${AUTH0_REDIRECT_URI}
            authorization-grant-type: authorization_code
        provider:
          auth0:
            issuer-uri: ${AUTH0_ISSUER_URI}/
            authorization-uri: ${AUTH0_ISSUER_URI}/authorize
            token-uri: ${AUTH0_ISSUER_URI}/oauth/token
            user-info-uri: ${AUTH0_ISSUER_URI}/userinfo
            user-name-attribute: email
      resourceserver:
        jwt:
          audiences:
            - ${AUTH0_ISSUER_URI}/api/v2

  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: my-consumer-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties.spring.json.trusted.packages: dev.zrdzn.hiresynapse.hiresynapsebackend.model,dev.zrdzn.hiresynapse.hiresynapsebackend.event
    producer:
      acks: all
    listener:
      missing-topics-fatal: false

ai:
  api-key: ${OPENAI_API_KEY}
